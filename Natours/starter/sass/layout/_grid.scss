.row {
    max-width: $grid-width; //If viewport is smaller than this width then it will fill 100% of avail space it has
    margin: 0 auto; //To center block elements inside other block elements, auto makes the browser auto gets the left and right margin to the same

    &:not(:last-child){//Selects last child without not and does all others with it
        margin-bottom: $gutter-vertical;

        @include respond(tab-port){
            margin-bottom: $gutter-vertical-small;
        }
    }

    @include respond(tab-port){
        max-width: 50rem;
        padding: 0 3rem;
    }

    @include clearfix;

    //Will select all elements that have a class that starts with col (^) - this is an Attribute Selector $ is ends with * is contains
    [class^="col-"]{
        float: left;

        &:not(:last-child){
            margin-right: $gutter-horizontal;

            @include respond(tab-port){
                margin-right: 0;
                margin-bottom: $gutter-vertical-small;
            }
        }

        @include respond(tab-port){
            width: 100% !important;
            margin-right: 0;
        }
    }

    .col-1-of-2{
        width: calc((100% - #{$gutter-horizontal}) / 2); //Needs to use once it is rendered using the Visual formatting model so calc needs to be used
        
    }

    .col-1-of-3{
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
    }

    .col-1-of-4{
        width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
    }

    .col-2-of-3{
        width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
    }

    .col-2-of-4{
        width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
    }

    .col-3-of-4{
        width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
    }
}